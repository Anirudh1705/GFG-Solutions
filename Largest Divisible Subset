public List<Integer> LargestSubset(int N, int[] arr) {
        
        Arrays.sort(arr);  // Important part                  int dp[] = new int[N];
        int hash[] = new int[N];
        int max = 0;
        int lastInd = 0;
        
        for(int i = 1 ; i < N ; i++){
            hash[i] = i;
            for(int prev = 0 ; prev < i ; prev++){
                
                if(arr[i] % arr[prev] == 0 && dp[i] < 1 + dp[prev]){
                    dp[i] = 1 + dp[prev];
                    hash[i] = prev;
                }
            }
            if(max < dp[i]){
                max = dp[i];
                lastInd = i;
            }
        }
        
        List<Integer> ans = new ArrayList<Integer>();
        ans.add(arr[lastInd]);
        
        while(hash[lastInd] != lastInd){
            lastInd = hash[lastInd];
            ans.add(arr[lastInd]);
        }
        
        return ans;
    }
