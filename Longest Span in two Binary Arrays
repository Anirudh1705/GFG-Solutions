class Solution {
    int longestCommonSum(boolean arr1[], boolean arr2[], int n) {
        // code here
        int[] temp = new int[n];
        for (int i = 0; i < n; i++) {
            if (arr1[i] == true && arr2[i] == true) {
                temp[i] = 0;
            } else if (arr1[i] == true && arr2[i] == false) {
                temp[i] = 1;
            } else if (arr1[i] == false && arr2[i] == true) {
                temp[i] = -1;
            }
        }
        int max = 0;
        int prefixSum = 0;
        HashMap<Integer, Integer> hm = new HashMap<>();
        for (int i = 0; i < n; i++) {
            prefixSum += temp[i];
            if (prefixSum == 0) {
                max = Math.max(max, i+1);
            }
            if (hm.containsKey(prefixSum)) {
                int j = hm.get(prefixSum);
                max = Math.max(max, i-j);
            } else {
                hm.put(prefixSum, i);
            }
        }
        return max;
        
    }
}
